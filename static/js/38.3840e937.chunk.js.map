{"version":3,"file":"static/js/38.3840e937.chunk.js","mappings":"iLACA,EAAwB,yBAAxB,EAA+D,+BAA/D,EAA2G,8BAA3G,EAA8J,sCAA9J,EAAkN,+BAAlN,EAAoQ,oCAApQ,EAAsT,+BAAtT,EAAqW,iC,SCCxVA,EAAY,SAAC,GAAgB,IAAdC,EAAa,EAAbA,OAC1B,OACE,eAAIC,UAAWC,EAAf,SACGF,EAAOG,KAAI,SAAAC,GACV,OACE,UAAC,KAAD,CAAOC,GAAE,kBAAaD,EAAME,IAAML,UAAWC,EAA7C,WACE,gBAAKD,UAAWC,EAAhB,UACE,gBACEK,IAAG,yCAAoCH,EAAMI,aAC7CC,IAAKL,EAAMM,eACXC,QAAQ,YAGZ,iBAAKV,UAAWC,EAAhB,WACE,cAAGD,UAAWC,EAAd,SAAgCE,EAAMQ,OAASR,EAAMS,QACrD,iBAAKZ,UAAWC,EAAhB,WACE,cAAGD,UAAWC,EAAd,SACGE,EAAMU,cAAgBV,EAAMW,kBAE/B,iBAAMd,UAAWC,EAAjB,SACGE,EAAMY,aAAaC,QAAQ,aAf+Bb,EAAME,GAqB5E,KAGN,C,yGC9BD,EAA4B,+BAA5B,EAAwE,gCAAxE,EAA2H,sCAA3H,EAAyL,2CAAzL,EAAsP,qC,SCG/O,SAASY,IACd,OAAsCC,EAAAA,EAAAA,UAAS,IAA/C,eAAOC,EAAP,KAAoBC,EAApB,KACA,GAAwCF,EAAAA,EAAAA,UAAS,IAAjD,eAAOG,EAAP,KAAqBC,EAArB,MACAC,EAAAA,EAAAA,YAAU,WACHJ,IACLK,EAAAA,EAAAA,IAAgBL,GAAaM,MAAK,YAAkB,IAAfC,EAAc,EAAdA,QACnCJ,EAAgBI,EACjB,GACF,GAAE,CAACP,IASJ,OACE,iCACE,mBAAQnB,UAAWC,EAAnB,UACE,kBAAMD,UAAWC,EAAgB0B,SAVlB,SAAAC,GACnBA,EAAMC,iBACN,IAAMC,EAAQF,EAAMG,OAAOC,SAASC,YAAYC,MAChDd,EAAeU,GACfF,EAAMG,OAAOI,OACd,EAKK,WACE,mBAAQC,KAAK,SAASpC,UAAWC,EAAjC,UACE,iBAAMD,UAAWC,EAAjB,uBAGF,kBACED,UAAWC,EACXmC,KAAK,OACLC,aAAa,MACbzB,KAAK,cACL0B,WAAS,EACTC,YAAY,uBAIlB,2BACE,SAACzC,EAAA,EAAD,CAAWC,OAAQsB,QAI1B,CC3CM,IAAMmB,EAAS,WAClB,OACI,SAACvB,EAAD,GAEP,C","sources":["webpack://react-homework-template/./src/components/MovieList/MovieList.module.css?6db5","components/MovieList/MovieList.jsx","webpack://react-homework-template/./src/components/MovieSearch/MovieSearch.module.css?a4c9","components/MovieSearch/MovieSearch.jsx","pages/Movies/Movies.jsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"films\":\"MovieList_films__YHG2-\",\"films__item\":\"MovieList_films__item__rXjTY\",\"films__img\":\"MovieList_films__img__FcrM1\",\"films__description\":\"MovieList_films__description__3MG1o\",\"films__name\":\"MovieList_films__name__m1M2F\",\"films__container\":\"MovieList_films__container__mDGP6\",\"films__info\":\"MovieList_films__info__ipORh\",\"films__rating\":\"MovieList_films__rating__Hge2n\",\"films__fav-icon\":\"MovieList_films__fav-icon__c-n3z\",\"active\":\"MovieList_active__TO6PH\",\"recom\":\"MovieList_recom__+6X0R\"};","import { Link } from 'react-router-dom';\nimport css from './MovieList.module.css';\nexport const MovieList = ({ movies }) => {\n  return (\n    <ul className={css.films}>\n      {movies.map(movie => {\n        return (\n          <Link  to={`/movies/${movie.id}`} className={css.films__item} key={movie.id}>\n            <div className={css.films__img}>\n              <img\n                src={`https://image.tmdb.org/t/p/w500${movie.poster_path}`}\n                alt={movie.original_title}\n                loading=\"lazy\"\n              />\n            </div>\n            <div className={css.films__description}>\n              <p className={css.films__name}>{movie.title || movie.name}</p>\n              <div className={css.films__container}>\n                <p className={css.films__info}>\n                  {movie.release_date || movie.first_air_date}\n                </p>\n                <span className={css.films__rating}>\n                  {movie.vote_average.toFixed(2)}\n                </span>\n              </div>\n            </div>\n          </Link>\n        );\n      })}\n    </ul>\n  );\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"Searchbar\":\"MovieSearch_Searchbar__QfCYe\",\"SearchForm\":\"MovieSearch_SearchForm__YCGFt\",\"SearchFormButton\":\"MovieSearch_SearchFormButton__lXaC4\",\"SearchFormButtonLabel\":\"MovieSearch_SearchFormButtonLabel__h50Aw\",\"SearchFormInput\":\"MovieSearch_SearchFormInput__AQ+H6\"};","import { useState, useEffect } from 'react';\nimport { getMovieByQuery } from 'services/movieAPI';\nimport { MovieList } from 'components/MovieList/MovieList';\nimport css from './MovieSearch.module.css';\nexport function MovieSearch() {\n  const [searchValue, setSearchValue] = useState('');\n  const [searchMovies, setSearchMovies] = useState([]);\n  useEffect(() => {\n    if (!searchValue) return;\n    getMovieByQuery(searchValue).then(({ results }) => {      \n      setSearchMovies(results);\n    });\n  }, [searchValue]);\n\n  const handleSubmit = event => {\n    event.preventDefault();\n    const query = event.target.elements.searchMovie.value;\n    setSearchValue(query);\n    event.target.reset();\n  };\n\n  return (\n    <>\n      <header className={css.Searchbar}>\n        <form className={css.SearchForm} onSubmit={handleSubmit}>\n          <button type=\"submit\" className={css.SearchFormButton}>\n            <span className={css.SearchFormButtonLabel}>Search</span>\n          </button>\n\n          <input\n            className={css.SearchFormInput}\n            type=\"text\"\n            autoComplete=\"off\"\n            name=\"searchMovie\"\n            autoFocus\n            placeholder=\"Search movie\"\n          />\n        </form>\n      </header>\n      <main>\n        <MovieList movies={searchMovies} />\n      </main>\n    </>\n  );\n}\n","import { MovieSearch } from \"components/MovieSearch/MovieSearch\";\nexport const Movies = () => {\n    return (\n        <MovieSearch/>\n    )\n}"],"names":["MovieList","movies","className","css","map","movie","to","id","src","poster_path","alt","original_title","loading","title","name","release_date","first_air_date","vote_average","toFixed","MovieSearch","useState","searchValue","setSearchValue","searchMovies","setSearchMovies","useEffect","getMovieByQuery","then","results","onSubmit","event","preventDefault","query","target","elements","searchMovie","value","reset","type","autoComplete","autoFocus","placeholder","Movies"],"sourceRoot":""}